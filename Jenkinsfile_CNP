#!groovy
@Library("Infrastructure") _

properties([
        [$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/sscs-evidence-share'],
        pipelineTriggers([[$class: 'GitHubPushTrigger']])
])

def type = "java"
def product = "sscs"
def component = "evidence-share"

def docmosisVaultName = ${env} == 'prod' ? 'docmosisiaasprodkv' : 'docmosisiaasdevkv'

def secrets = [
    'sscs-${env}'      : [
            secret('idam-api', 'IDAM_API_URL'),
            secret('idam-oauth-user', 'IDAM_OAUTH2_CLIENT_ID'),
            secret('idam-redirect', 'IDAM_OAUTH2_REDIRECT_URL'),
            secret('idam-sscs-systemupdate-user', 'IDAM_SSCS_SYSTEMUPDATE_USER'),
            secret('idam-sscs-systemupdate-password', 'IDAM_SSCS_SYSTEMUPDATE_PASSWORD'),
            secret('idam-sscs-oauth2-client-secret', 'IDAM_OAUTH2_CLIENT_SECRET'),
            secret('ccd-api', 'CORE_CASE_DATA_API_URL'),
            secret('ccd-jid', 'CORE_CASE_DATA_JURISDICTION_ID'),
            secret('ccd-tid', 'CORE_CASE_DATA_CASE_TYPE_ID'),
            // Used by Kubernetes
            secret('idam-s2s-api', 'IDAM_S2S_AUTH'),
            secret('sscs-s2s-secret', 'IDAM_S2S_AUTH_TOTP_SECRET'),
            secret('s2s-micro', 'IDAM_S2S_AUTH_MICROSERVICE'),
            secret('sscs-asb-primary-send-and-listen-shared-access-key', 'AMQP_PASSWORD')
        ],
    docmosisVaultName      : [
            // Used by Kubernetes
            secret('docmosis-endpoint', 'PDF_SERVICE_BASE_URL'),
            secret('docmosis-api-key', 'PDF_SERVICE_ACCESS_KEY')
        ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline(type, product, component) {
    if (env.CHANGE_TITLE && !env.CHANGE_TITLE.startsWith('Bump')) {
        enableDockerBuild()
        enableDeployToAKS()
    }
    enableSlackNotifications('#sscs-tech')
    loadVaultSecrets(secrets)
}

